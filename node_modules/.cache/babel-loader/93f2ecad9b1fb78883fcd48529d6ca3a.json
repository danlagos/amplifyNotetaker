{"ast":null,"code":"import _slicedToArray from \"/Users/daniellagos/Desktop/amplify-notetaker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/daniellagos/Desktop/amplify-notetaker/src/AppHooks.js\";\nimport React, { useState, useEffect } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { createNote, deleteNote, updateNote } from './graphql/mutations';\nimport { listNotes } from './graphql/queries';\nimport { onCreateNote, onDeleteNote, onUpdateNote } from './graphql/subscriptions';\n\nconst App = () => {\n  // creating a \"state\" using react hooks format\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        id = _useState2[0],\n        setId = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        note = _useState4[0],\n        setNote = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        notes = _useState6[0],\n        setNotes = _useState6[1];\n\n  useEffect(() => {\n    getNotes();\n    const createNoteListener = API.graphql(graphqlOperation(onCreateNote)).subscribe({\n      next: noteData => {\n        const newNote = noteData.value.data.onCreateNote;\n        setNotes(prevNotes => {\n          const oldNotes = prevNotes.filter(note => note.id !== newNote.id);\n          const updatedNotes = [...oldNotes, newNote];\n          return updatedNotes;\n        });\n      }\n    });\n    const deleteNoteListener = API.graphql(graphqlOperation(onDeleteNote)).subscribe({\n      next: noteData => {\n        const deletedNote = noteData.value.data.onDeleteNote;\n        setNotes(prevNotes => {\n          const updatedNotes = prevNotes.filter(note => note.id !== deletedNote.id);\n          return updatedNotes;\n        });\n      }\n    });\n    const updatedNoteListener = API.graphql(graphqlOperation(onUpdateNote)).subscribe({\n      next: noteData => {\n        const updatedNote = noteData.value.data.onUpdateNote;\n        setNotes(prevNotes => {\n          const index = prevNotes.findIndex(note => note.id === updatedNote.id);\n          const updatedNotes = [...prevNotes.slice(0, index), updatedNote, ...prevNotes.slice(index + 1)];\n          return updatedNotes;\n        });\n        setNotes(\"\");\n        setId(\"\");\n      }\n    });\n    return () => {\n      createNoteListener.unsubscribe();\n      deleteNoteListener.unsubscribe();\n      updatedNoteListener.unsubscribe();\n    };\n  }, []);\n\n  const getNotes = async () => {\n    const result = await API.graphql(graphqlOperation(listNotes));\n    setNotes(result.data.listNotes.items);\n  };\n\n  const handleChangeNote = event => setNote(event.target.value);\n\n  const hasExistingNote = () => {\n    if (id) {\n      const isNote = notes.findIndex(note => note.id === id) > -1;\n      return isNote;\n    }\n\n    return false;\n  };\n\n  const handleAddNote = async event => {\n    event.preventDefault();\n\n    if (hasExistingNote()) {\n      handleUpdateNote();\n    } else {\n      const input = {\n        note\n      };\n      await API.graphql(graphqlOperation(createNote, {\n        input\n      }));\n      setNote(\"\");\n    }\n  };\n\n  const handleUpdateNote = async () => {\n    const input = {\n      id,\n      note\n    };\n    await API.graphql(graphqlOperation(updateNote, {\n      input\n    }));\n  };\n\n  const handleDeleteNote = async noteId => {\n    const input = {\n      id: noteId\n    };\n    await API.graphql(graphqlOperation(deleteNote, {\n      input\n    }));\n  };\n\n  const handleSetNote = ({\n    note,\n    id\n  }) => {\n    setNote(note);\n    setId(id);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"flex flex-column items-center justify-center pa3 bg-washed-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"code f2-l\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Amplify Notetaker\"), React.createElement(\"form\", {\n    onSubmit: handleAddNote,\n    className: \"mb3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"pa2 f4\",\n    placeholder: \"Write your note\",\n    onChange: handleChangeNote,\n    value: note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"pa2 f4\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, id ? \"Update Note\" : \"Add Note\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, notes.map(item => React.createElement(\"div\", {\n    key: item.id,\n    className: \"flex items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    onClick: () => handleSetNote(item),\n    className: \"list pa1 f3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, item.note), React.createElement(\"button\", {\n    onClick: () => handleDeleteNote(item.id),\n    className: \"bg-transparent bn f4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"\\xD7\"))))));\n};\n\nexport default withAuthenticator(App, {\n  includeGreetings: true\n});","map":{"version":3,"sources":["/Users/daniellagos/Desktop/amplify-notetaker/src/AppHooks.js"],"names":["React","useState","useEffect","API","graphqlOperation","withAuthenticator","createNote","deleteNote","updateNote","listNotes","onCreateNote","onDeleteNote","onUpdateNote","App","id","setId","note","setNote","notes","setNotes","getNotes","createNoteListener","graphql","subscribe","next","noteData","newNote","value","data","prevNotes","oldNotes","filter","updatedNotes","deleteNoteListener","deletedNote","updatedNoteListener","updatedNote","index","findIndex","slice","unsubscribe","result","items","handleChangeNote","event","target","hasExistingNote","isNote","handleAddNote","preventDefault","handleUpdateNote","input","handleDeleteNote","noteId","handleSetNote","map","item","includeGreetings"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { createNote, deleteNote, updateNote } from './graphql/mutations';\nimport { listNotes } from './graphql/queries';\nimport { onCreateNote, onDeleteNote, onUpdateNote } from './graphql/subscriptions';\n\nconst App = () => {\n  // creating a \"state\" using react hooks format\n  const [id, setId] = useState(\"\")\n  const [note, setNote] = useState(\"\")\n  const [notes, setNotes] = useState([])\n\n  useEffect(() => {\n    getNotes();\n    const createNoteListener = API.graphql(graphqlOperation(onCreateNote)).subscribe({\n      next: noteData => {\n        const newNote = noteData.value.data.onCreateNote;\n        setNotes(prevNotes => {\n          const oldNotes = prevNotes.filter(note => note.id !== newNote.id)\n          const updatedNotes = [...oldNotes, newNote]\n          return updatedNotes\n        })\n      }\n    });\n\n    const deleteNoteListener = API.graphql(graphqlOperation(onDeleteNote)).subscribe(\n      {\n        next: noteData => {\n          const deletedNote = noteData.value.data.onDeleteNote\n          setNotes(prevNotes => {\n            const updatedNotes = prevNotes.filter(note =>\n            note.id !== deletedNote.id)\n            return updatedNotes;\n          })\n        }\n      });\n\n    const updatedNoteListener = API.graphql(graphqlOperation(onUpdateNote)).subscribe(\n    {\n      next: noteData => {\n        const updatedNote = noteData.value.data.onUpdateNote;\n        setNotes(prevNotes => {\n          const index = prevNotes.findIndex(note => note.id === updatedNote.id);\n          const updatedNotes = [\n              ...prevNotes.slice(0, index),\n              updatedNote,\n              ...prevNotes.slice(index + 1)\n            ];\n            return updatedNotes\n        })\n        setNotes(\"\")\n        setId(\"\")\n      }\n    });\n\n    return() => {\n      createNoteListener.unsubscribe();\n      deleteNoteListener.unsubscribe();\n      updatedNoteListener.unsubscribe();\n    }\n  }, [])\n\n  const getNotes = async () => {\n    const result = await API.graphql(graphqlOperation(listNotes));\n    setNotes(result.data.listNotes.items);\n  };\n\n  const handleChangeNote = event => setNote(event.target.value);\n\n  const hasExistingNote = () => {\n    if (id) {\n      const isNote = notes.findIndex(note => note.id  === id ) > -1\n      return isNote;\n    }\n    return false;\n  };\n\n  const handleAddNote = async event => {\n    event.preventDefault();\n  if (hasExistingNote()) {\n    handleUpdateNote();\n  } else {\n    const input = { note };\n    await API.graphql(graphqlOperation(createNote, { input }));\n    setNote(\"\");\n    }\n  };\n\n  const handleUpdateNote = async () => {\n    const input = { id, note };\n    await API.graphql(graphqlOperation(updateNote, { input })\n    );\n  };\n\n  const handleDeleteNote = async noteId => {\n    const input = { id: noteId };\n    await API.graphql(graphqlOperation(deleteNote, { input })\n    );\n  }\n\n  const handleSetNote = ({note, id }) => {\n    setNote(note)\n    setId(id)\n  }\n  \n    return (\n      <div className=\"flex flex-column items-center justify-center pa3 bg-washed-red\">\n        <h1 className=\"code f2-l\">Amplify Notetaker</h1>\n        {/* Note Form */}\n        <form onSubmit={ handleAddNote } className=\"mb3\">\n          <input\n            type=\"text\"\n            className=\"pa2 f4\"\n            placeholder=\"Write your note\"\n            onChange={ handleChangeNote }\n            value={ note }\n            />\n\n            <button className=\"pa2 f4\" type=\"submit\">\n              { id ? \"Update Note\": \"Add Note\"}\n            </button>\n        </form>\n        {/* Notes List*/}\n        <div>\n          {notes.map(item => (\n            <div key={item.id} className=\"flex items-center\">\n              <li\n                onClick={() => handleSetNote(item)} className=\"list pa1 f3\">\n                { item.note }\n              </li>\n              <button\n                onClick={() => handleDeleteNote(item.id) }\n                className=\"bg-transparent bn f4\">\n                <span>&times;</span>\n              </button>\n            </div>\n          )) }\n        </div>\n      </div>\n    )\n  }\n\n\nexport default withAuthenticator(App, { includeGreetings: true });\n"]},"metadata":{},"sourceType":"module"}