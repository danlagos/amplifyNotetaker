{"ast":null,"code":"var _jsxFileName = \"/Users/daniellagos/Desktop/amplify-notetaker/src/App.js\";\nimport React, { Component } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { createNote, deleteNote } from './graphql/mutations';\nimport { listNotes } from './graphql/queries';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      note: \"\",\n      notes: []\n    };\n\n    this.handleChangeNote = event => this.setState({\n      note: event.target.value\n    });\n\n    this.handleAddNote = async event => {\n      const _this$state = this.state,\n            note = _this$state.note,\n            notes = _this$state.notes;\n      event.preventDefault();\n      const input = {\n        note\n      };\n      const result = await API.graphql(graphqlOperation(createNote, {\n        input\n      }));\n      const newNote = result.data.createNote;\n      const updatedNotes = [newNote, ...notes];\n      this.setState({\n        notes: updatedNotes,\n        note: \"\"\n      });\n    };\n\n    this.handleDeleteNote = async noteId => {\n      const notes = this.state.notes;\n      const input = {\n        id: noteId\n      };\n      const result = await API.graphql(graphqlOperation(deleteNote, {\n        input\n      }));\n      const deletedNoteId = result.data.deleteNote.id;\n      const updatedNotes = notes.filter(note => note.id !== deletedNoteId);\n      this.setState({\n        notes: updatedNotes\n      });\n    };\n  }\n\n  // when the Component mounts a list of notes will be displayed.  This allows\n  // you to see all of the previous notes your've made.  This list is stored\n  // in a querry in the graphql folder.  This querry is stored in a variable called\n  // listNotes.  listNote.items is the attribute that hold the entire list.\n  async componentDidMount() {\n    const result = await API.graphql(graphqlOperation(listNotes));\n    this.setState({\n      notes: result.data.listNotes.items\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          notes = _this$state2.notes,\n          note = _this$state2.note;\n    return React.createElement(\"div\", {\n      className: \"flex flex-column items-center justify-center pa3 bg-washed-red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"code f2-l\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Amplify Notetaker\"), React.createElement(\"form\", {\n      onSubmit: this.handleAddNote,\n      className: \"mb3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"pa2 f4\",\n      placeholder: \"Write your note\",\n      onChange: this.handleChangeNote,\n      value: note,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"pa2 f4\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Add Form\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, notes.map(item => React.createElement(\"div\", {\n      key: item.id,\n      className: \"flex items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list pa1 f3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, item.note), React.createElement(\"button\", {\n      onClick: () => this.handleDeleteNote(item.id),\n      className: \"bg-transparent bn f4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\xD7\"))))));\n  }\n\n}\n\nexport default withAuthenticator(App, {\n  includeGreetings: true\n});","map":{"version":3,"sources":["/Users/daniellagos/Desktop/amplify-notetaker/src/App.js"],"names":["React","Component","API","graphqlOperation","withAuthenticator","createNote","deleteNote","listNotes","App","state","note","notes","handleChangeNote","event","setState","target","value","handleAddNote","preventDefault","input","result","graphql","newNote","data","updatedNotes","handleDeleteNote","noteId","id","deletedNoteId","filter","componentDidMount","items","render","map","item","includeGreetings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { createNote, deleteNote } from './graphql/mutations';\nimport { listNotes } from './graphql/queries';\n\nclass App extends Component {\n  state = {\n    note: \"\",\n    notes: []\n  };\n\n// when the Component mounts a list of notes will be displayed.  This allows\n// you to see all of the previous notes your've made.  This list is stored\n// in a querry in the graphql folder.  This querry is stored in a variable called\n// listNotes.  listNote.items is the attribute that hold the entire list.\n\n  async componentDidMount(){\n    const result = await API.graphql(graphqlOperation(listNotes));\n    this.setState({ notes: result.data.listNotes.items })\n  }\n\n  handleChangeNote = event => this.setState({ note: event.target.value})\n\n  handleAddNote = async event => {\n    const { note, notes } = this.state;\n    event.preventDefault();\n    const input = { note };\n    const result = await API.graphql(graphqlOperation(createNote, { input }));\n    const newNote = result.data.createNote;\n    const updatedNotes = [newNote, ...notes];\n    this.setState({ notes: updatedNotes, note: \"\" });\n  }\n\n\n// async function.  input will hold the note Id in order to identify which note\n// to delete.  We will then run the mutation that deletes a note.  you need to\n// pass the name of the mutation, deleteNote, and the input variable (this holds\n// the id of the note to delete).  you now have to \n\n  handleDeleteNote = async noteId => {\n    const { notes } = this.state\n    const input = { id: noteId };\n    const result = await API.graphql(graphqlOperation(deleteNote, { input }));\n    const deletedNoteId = result.data.deleteNote.id;\n    const updatedNotes = notes.filter(note => note.id !== deletedNoteId);\n    this.setState({ notes: updatedNotes })\n  }\n\n  render(){\n    const { notes, note } = this.state\n\n    return (\n      <div className=\"flex flex-column items-center justify-center pa3 bg-washed-red\">\n        <h1 className=\"code f2-l\">Amplify Notetaker</h1>\n        {/* Note Form */}\n        <form onSubmit={ this.handleAddNote } className=\"mb3\">\n          <input\n            type=\"text\"\n            className=\"pa2 f4\"\n            placeholder=\"Write your note\"\n            onChange={ this.handleChangeNote }\n            value={ note }\n            />\n\n            <button className=\"pa2 f4\" type=\"submit\">\n              Add Form\n            </button>\n        </form>\n        {/* Notes List*/}\n        <div>\n          { notes.map(item => (\n            <div key={ item.id } className=\"flex items-center\">\n              <li className=\"list pa1 f3\">\n                { item.note}\n              </li>\n              {/* graphql has a delete mutation we can use to delete notes to\n                execute the handleDeletenote funciton you need to provide an\n                arguement with the id.  item.id does this */}\n              <button\n                onClick={() => this.handleDeleteNote(item.id) }\n                className=\"bg-transparent bn f4\">\n                <span>&times;</span>\n              </button>\n            </div>\n          )) }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withAuthenticator(App, { includeGreetings: true });\n"]},"metadata":{},"sourceType":"module"}