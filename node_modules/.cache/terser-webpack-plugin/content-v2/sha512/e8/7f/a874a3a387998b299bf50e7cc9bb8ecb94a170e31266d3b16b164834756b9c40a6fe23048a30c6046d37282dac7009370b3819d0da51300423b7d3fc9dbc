{"map":"{\"version\":3,\"sources\":[\"/Users/daniellagos/Desktop/amplify-notetaker/src/graphql/mutations.js\",\"/Users/daniellagos/Desktop/amplify-notetaker/src/graphql/queries.js\",\"/Users/daniellagos/Desktop/amplify-notetaker/src/App.js\",\"/Users/daniellagos/Desktop/amplify-notetaker/src/graphql/subscriptions.js\",\"/Users/daniellagos/Desktop/amplify-notetaker/src/serviceWorker.js\",\"/Users/daniellagos/Desktop/amplify-notetaker/src/aws-exports.js\",\"/Users/daniellagos/Desktop/amplify-notetaker/src/index.js\"],\"names\":[\"createNote\",\"updateNote\",\"deleteNote\",\"listNotes\",\"App\",\"state\",\"id\",\"note\",\"notes\",\"getNotes\",\"_callee\",\"result\",\"regenerator_default\",\"a\",\"wrap\",\"_context\",\"prev\",\"next\",\"API\",\"graphql\",\"graphqlOperation\",\"sent\",\"_this\",\"setState\",\"data\",\"items\",\"stop\",\"handleChangeNote\",\"event\",\"target\",\"value\",\"hasExistingNote\",\"_this$state\",\"findIndex\",\"handleAddNote\",\"_callee2\",\"_this$state2\",\"input\",\"_context2\",\"preventDefault\",\"handleUpdateNote\",\"_callee3\",\"_this$state3\",\"_context3\",\"handleDeleteNote\",\"_callee4\",\"noteId\",\"_context4\",\"handleSetNote\",\"_ref5\",\"_this2\",\"this\",\"createNoteListener\",\"subscribe\",\"noteData\",\"newNote\",\"onCreateNote\",\"prevNotes\",\"filter\",\"updatedNotes\",\"concat\",\"Object\",\"toConsumableArray\",\"deleteNoteListener\",\"deletedNote\",\"onDeleteNote\",\"updatedNoteListener\",\"updatedNote\",\"onUpdateNote\",\"index\",\"slice\",\"unsubscribe\",\"_this3\",\"_this$state4\",\"react_default\",\"createElement\",\"className\",\"onSubmit\",\"type\",\"placeholder\",\"onChange\",\"map\",\"item\",\"key\",\"onClick\",\"Component\",\"withAuthenticator\",\"includeGreetings\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"awsmobile\",\"aws_project_region\",\"aws_cognito_identity_pool_id\",\"aws_cognito_region\",\"aws_user_pools_id\",\"aws_user_pools_web_client_id\",\"oauth\",\"aws_appsync_graphqlEndpoint\",\"aws_appsync_region\",\"aws_appsync_authenticationType\",\"aws_content_delivery_bucket\",\"aws_content_delivery_bucket_region\",\"aws_content_delivery_url\",\"Amplify\",\"configure\",\"aws_exports\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// eslint-disable\\n// this is an auto generated file. This will be overwritten\\n\\nexport const createNote = `mutation CreateNote($input: CreateNoteInput!) {\\n  createNote(input: $input) {\\n    id\\n    note\\n  }\\n}\\n`;\\nexport const updateNote = `mutation UpdateNote($input: UpdateNoteInput!) {\\n  updateNote(input: $input) {\\n    id\\n    note\\n  }\\n}\\n`;\\nexport const deleteNote = `mutation DeleteNote($input: DeleteNoteInput!) {\\n  deleteNote(input: $input) {\\n    id\\n    note\\n  }\\n}\\n`;\\n\",\"// eslint-disable\\n// this is an auto generated file. This will be overwritten\\n\\nexport const getNote = `query GetNote($id: ID!) {\\n  getNote(id: $id) {\\n    id\\n    note\\n  }\\n}\\n`;\\nexport const listNotes = `query ListNotes(\\n  $filter: ModelNoteFilterInput\\n  $limit: Int\\n  $nextToken: String\\n) {\\n  listNotes(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n    items {\\n      id\\n      note\\n    }\\n    nextToken\\n  }\\n}\\n`;\\n\",\"import React, { Component } from 'react';\\nimport { API, graphqlOperation } from 'aws-amplify'\\nimport { withAuthenticator } from 'aws-amplify-react';\\nimport { createNote, deleteNote, updateNote } from './graphql/mutations';\\nimport { listNotes } from './graphql/queries';\\nimport { onCreateNote, onDeleteNote, onUpdateNote } from './graphql/subscriptions';\\n\\nclass App extends Component {\\n  // standard state variables\\n  state = {\\n    id: \\\"\\\",\\n    note: \\\"\\\",\\n    notes: []\\n  };\\n\\n\\n  componentDidMount() {\\n  // when the Component mounts a list of notes will be displayed (this.getNotes())\\n    this.getNotes();\\n  // listener that listens for certain mutations and makes appropriate changes\\n  // to state in order to update UI with the next function we get from calling\\n  // the subscribe function\\n    this.createNoteListener = API.graphql(graphqlOperation(onCreateNote)).subscribe({\\n      next: noteData => {\\n        const newNote = noteData.value.data.onCreateNote;\\n        const prevNotes = this.state.notes.filter(\\n          note => note.id !== newNote.id\\n        );\\n        const updatedNotes = [...prevNotes, newNote];\\n        this.setState({ notes: updatedNotes });\\n      }\\n    });\\n    // using listener to delete notes\\n    this.deleteNoteListener = API.graphql(graphqlOperation(onDeleteNote)).subscribe(\\n      {\\n        next: noteData => {\\n          const deletedNote = noteData.value.data.onDeleteNote\\n          const updatedNotes = this.state.notes.filter(note => note.id !==\\n          deletedNote.id)\\n          this.setState({ notes: updatedNotes })\\n        }\\n      });\\n    this.updatedNoteListener = API.graphql(graphqlOperation(onUpdateNote)).subscribe(\\n    {\\n      next: noteData => {\\n        const { notes } = this.state\\n        const updatedNote = noteData.value.data.onUpdateNote;\\n        const index = this.state.notes.findIndex(note => note.id === updatedNote.id);\\n      // puts the updated note in the correct place\\n        const updatedNotes = [\\n          ...notes.slice(0, index),\\n          updatedNote,\\n          ...notes.slice(index + 1)\\n        ]\\n        this.setState({ notes: updatedNotes, note: \\\"\\\", id: \\\"\\\"});\\n      }\\n    })\\n  }\\n  \\n// will clean up listeners\\n  componentWillUnmount() {\\n    this.createNoteListener.unsubscribe();\\n    this.deleteNoteListener.unsubscribe();\\n    this.updatedNoteListener.unsubscribe();\\n  }\\n\\n  // This allows you to see all of the previous notes your've made.  This list is stored\\n  // in a querry in the graphql folder.  This querry is stored in a variable called\\n  // listNotes.  listNote.items is the attribute that hold the entire list.\\n  getNotes = async () => {\\n    const result = await API.graphql(graphqlOperation(listNotes));\\n    this.setState({ notes: result.data.listNotes.items });\\n  }\\n\\n  handleChangeNote = event => this.setState({ note: event.target.value})\\n\\n  hasExistingNote = () => {\\n    const { notes, id } = this.state\\n    if (id) {\\n      // is the id a valid id?\\n      const isNote = notes.findIndex(note => note.id  === id ) > -1\\n      return isNote;\\n    }\\n    return false;\\n  }\\n\\n  handleAddNote = async event => {\\n    const { note, notes } = this.state;\\n    event.preventDefault();\\n  // check if we have an existing note, if so update it.  otherwise add the note\\n  if (this.hasExistingNote()) {\\n    this.handleUpdateNote();\\n  } else {\\n    const input = { note };\\n    await API.graphql(graphqlOperation(createNote, { input }));\\n    // listener added, the following consts no longer required\\n    // const newNote = result.data.createNote;\\n    // const updatedNotes = [newNote, ...notes];\\n    this.setState({ note: \\\"\\\" });\\n    }\\n  };\\n\\n  handleUpdateNote = async () => {\\n    const { id, note } = this.state;\\n    const input = { id, note };\\n    await API.graphql(graphqlOperation(updateNote, { input }));\\n// no longer required once listener was added\\n    // const updatedNote = result.data.updateNote;\\n  //   const index = notes.findIndex(note => note.id === updatedNote.id);\\n  // // puts the updated note in the correct place\\n  //   const updatedNotes = [\\n  //     ...notes.slice(0, index),\\n  //     updatedNote,\\n  //     ...notes.slice(index + 1)\\n  //   ]\\n  //   this.setState({ notes: updatedNotes, note: \\\"\\\", id: \\\"\\\"});\\n  }\\n\\n// async function.  input will hold the note Id in order to identify which note\\n// to delete.  We will then run the mutation that deletes a note.  you need to\\n// pass the name of the mutation, deleteNote, and the input variable (this holds\\n// the id of the note to delete).\\n\\n  handleDeleteNote = async noteId => {\\n    const { notes } = this.state\\n    const input = { id: noteId };\\n    await API.graphql(graphqlOperation(deleteNote, { input }));\\n    // listener added, the following consts no longer required\\n    // const deletedNoteId = result.data.deleteNote.id;\\n    // const updatedNotes = notes.filter(note => note.id !== deletedNoteId);\\n    // this.setState({ notes: updatedNotes })\\n  }\\n\\n  // to update a note.  select a note to edit the text in the form, submit the\\n  // form, and have that updated note placed in its previous position in the\\n  // notes list.  First step is to allow users to click on the note.\\n  // Creating a function that allows you to click on the note, and grabs the id.\\n  //\\n\\n  handleSetNote = ({note, id }) => this.setState({ note, id })\\n\\n  render(){\\n    const { id, notes, note } = this.state;\\n\\n    return (\\n      <div className=\\\"flex flex-column items-center justify-center pa3 bg-washed-red\\\">\\n        <h1 className=\\\"code f2-l\\\">Amplify Notetaker</h1>\\n        {/* Note Form */}\\n        <form onSubmit={ this.handleAddNote } className=\\\"mb3\\\">\\n          <input\\n            type=\\\"text\\\"\\n            className=\\\"pa2 f4\\\"\\n            placeholder=\\\"Write your note\\\"\\n            onChange={ this.handleChangeNote }\\n            value={ note }\\n            />\\n\\n            <button className=\\\"pa2 f4\\\" type=\\\"submit\\\">\\n              { id ? \\\"Update Note\\\": \\\"Add Note\\\"}\\n            </button>\\n        </form>\\n        {/* Notes List*/}\\n        <div>\\n          { notes.map(item => (\\n            <div key={ item.id } className=\\\"flex items-center\\\">\\n              <li onClick={() => this.handleSetNote(item) } className=\\\"list pa1 f3\\\">\\n                { item.note }\\n              </li>\\n              {/* graphql has a delete mutation we can use to delete notes to\\n                execute the handleDeletenote funciton you need to provide an\\n                arguement with the id.  item.id does this */}\\n              <button\\n                onClick={() => this.handleDeleteNote(item.id) }\\n                className=\\\"bg-transparent bn f4\\\">\\n                <span>&times;</span>\\n              </button>\\n            </div>\\n          )) }\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default withAuthenticator(App, { includeGreetings: true });\\n\",\"// eslint-disable\\n// this is an auto generated file. This will be overwritten\\n\\nexport const onCreateNote = `subscription OnCreateNote {\\n  onCreateNote {\\n    id\\n    note\\n  }\\n}\\n`;\\nexport const onUpdateNote = `subscription OnUpdateNote {\\n  onUpdateNote {\\n    id\\n    note\\n  }\\n}\\n`;\\nexport const onDeleteNote = `subscription OnDeleteNote {\\n  onDeleteNote {\\n    id\\n    note\\n  }\\n}\\n`;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\\n\\nconst awsmobile = {\\n    \\\"aws_project_region\\\": \\\"us-west-2\\\",\\n    \\\"aws_cognito_identity_pool_id\\\": \\\"us-west-2:fdeb5c79-abdb-426a-b854-271a8a6a5635\\\",\\n    \\\"aws_cognito_region\\\": \\\"us-west-2\\\",\\n    \\\"aws_user_pools_id\\\": \\\"us-west-2_HkQwCXfW2\\\",\\n    \\\"aws_user_pools_web_client_id\\\": \\\"1becqv2plj9fj8u3q2hure7dvu\\\",\\n    \\\"oauth\\\": {},\\n    \\\"aws_appsync_graphqlEndpoint\\\": \\\"https://rwsklerz4fbb5hhtmkcj5m5amq.appsync-api.us-west-2.amazonaws.com/graphql\\\",\\n    \\\"aws_appsync_region\\\": \\\"us-west-2\\\",\\n    \\\"aws_appsync_authenticationType\\\": \\\"AMAZON_COGNITO_USER_POOLS\\\",\\n    \\\"aws_content_delivery_bucket\\\": \\\"amplify-notetaker-20190619235030-hostingbucket-noteenv\\\",\\n    \\\"aws_content_delivery_bucket_region\\\": \\\"us-west-2\\\",\\n    \\\"aws_content_delivery_url\\\": \\\"http://amplify-notetaker-20190619235030-hostingbucket-noteenv.s3-website-us-west-2.amazonaws.com\\\"\\n};\\n\\n\\nexport default awsmobile;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport Amplify from 'aws-amplify';\\nimport aws_exports from './aws-exports';\\nAmplify.configure(aws_exports);\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{141:function(e,t,n){e.exports=n(350)},350:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),r=n(134),i=n.n(r),s=n(39),c=n(18),u=n.n(c),l=n(27),p=n(135),d=n(136),h=n(139),f=n(137),b=n(140),m=n(7),N=n.n(m),w=n(138),v=\"mutation CreateNote($input: CreateNoteInput!) {\\n  createNote(input: $input) {\\n    id\\n    note\\n  }\\n}\\n\",g=\"mutation UpdateNote($input: UpdateNoteInput!) {\\n  updateNote(input: $input) {\\n    id\\n    note\\n  }\\n}\\n\",_=\"mutation DeleteNote($input: DeleteNoteInput!) {\\n  deleteNote(input: $input) {\\n    id\\n    note\\n  }\\n}\\n\",O=\"query ListNotes(\\n  $filter: ModelNoteFilterInput\\n  $limit: Int\\n  $nextToken: String\\n) {\\n  listNotes(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n    items {\\n      id\\n      note\\n    }\\n    nextToken\\n  }\\n}\\n\",k=function(e){function t(){var e,n;Object(p.a)(this,t);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(n=Object(h.a)(this,(e=Object(f.a)(t)).call.apply(e,[this].concat(o)))).state={id:\"\",note:\"\",notes:[]},n.getNotes=Object(l.a)(u.a.mark(function e(){var t;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,m.API.graphql(Object(m.graphqlOperation)(O));case 2:t=e.sent,n.setState({notes:t.data.listNotes.items});case 4:case\"end\":return e.stop()}},e)})),n.handleChangeNote=function(e){return n.setState({note:e.target.value})},n.hasExistingNote=function(){var e=n.state,t=e.notes,a=e.id;return!!a&&t.findIndex(function(e){return e.id===a})>-1},n.handleAddNote=function(){var e=Object(l.a)(u.a.mark(function e(t){var a,o,r;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(a=n.state,o=a.note,a.notes,t.preventDefault(),!n.hasExistingNote()){e.next=6;break}n.handleUpdateNote(),e.next=10;break;case 6:return r={note:o},e.next=9,m.API.graphql(Object(m.graphqlOperation)(v,{input:r}));case 9:n.setState({note:\"\"});case 10:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),n.handleUpdateNote=Object(l.a)(u.a.mark(function e(){var t,a,o,r;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=n.state,a=t.id,o=t.note,r={id:a,note:o},e.next=4,m.API.graphql(Object(m.graphqlOperation)(g,{input:r}));case 4:case\"end\":return e.stop()}},e)})),n.handleDeleteNote=function(){var e=Object(l.a)(u.a.mark(function e(t){var a;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n.state.notes,a={id:t},e.next=4,m.API.graphql(Object(m.graphqlOperation)(_,{input:a}));case 4:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),n.handleSetNote=function(e){var t=e.note,a=e.id;return n.setState({note:t,id:a})},n}return Object(b.a)(t,e),Object(d.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;this.getNotes(),this.createNoteListener=m.API.graphql(Object(m.graphqlOperation)(\"subscription OnCreateNote {\\n  onCreateNote {\\n    id\\n    note\\n  }\\n}\\n\")).subscribe({next:function(t){var n=t.value.data.onCreateNote,a=e.state.notes.filter(function(e){return e.id!==n.id}),o=[].concat(Object(s.a)(a),[n]);e.setState({notes:o})}}),this.deleteNoteListener=m.API.graphql(Object(m.graphqlOperation)(\"subscription OnDeleteNote {\\n  onDeleteNote {\\n    id\\n    note\\n  }\\n}\\n\")).subscribe({next:function(t){var n=t.value.data.onDeleteNote,a=e.state.notes.filter(function(e){return e.id!==n.id});e.setState({notes:a})}}),this.updatedNoteListener=m.API.graphql(Object(m.graphqlOperation)(\"subscription OnUpdateNote {\\n  onUpdateNote {\\n    id\\n    note\\n  }\\n}\\n\")).subscribe({next:function(t){var n=e.state.notes,a=t.value.data.onUpdateNote,o=e.state.notes.findIndex(function(e){return e.id===a.id}),r=[].concat(Object(s.a)(n.slice(0,o)),[a],Object(s.a)(n.slice(o+1)));e.setState({notes:r,note:\"\",id:\"\"})}})}},{key:\"componentWillUnmount\",value:function(){this.createNoteListener.unsubscribe(),this.deleteNoteListener.unsubscribe(),this.updatedNoteListener.unsubscribe()}},{key:\"render\",value:function(){var e=this,t=this.state,n=t.id,a=t.notes,r=t.note;return o.a.createElement(\"div\",{className:\"flex flex-column items-center justify-center pa3 bg-washed-red\"},o.a.createElement(\"h1\",{className:\"code f2-l\"},\"Amplify Notetaker\"),o.a.createElement(\"form\",{onSubmit:this.handleAddNote,className:\"mb3\"},o.a.createElement(\"input\",{type:\"text\",className:\"pa2 f4\",placeholder:\"Write your note\",onChange:this.handleChangeNote,value:r}),o.a.createElement(\"button\",{className:\"pa2 f4\",type:\"submit\"},n?\"Update Note\":\"Add Note\")),o.a.createElement(\"div\",null,a.map(function(t){return o.a.createElement(\"div\",{key:t.id,className:\"flex items-center\"},o.a.createElement(\"li\",{onClick:function(){return e.handleSetNote(t)},className:\"list pa1 f3\"},t.note),o.a.createElement(\"button\",{onClick:function(){return e.handleDeleteNote(t.id)},className:\"bg-transparent bn f4\"},o.a.createElement(\"span\",null,\"\\xd7\")))})))}}]),t}(a.Component),y=Object(w.withAuthenticator)(k,{includeGreetings:!0});Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var x={aws_project_region:\"us-west-2\",aws_cognito_identity_pool_id:\"us-west-2:fdeb5c79-abdb-426a-b854-271a8a6a5635\",aws_cognito_region:\"us-west-2\",aws_user_pools_id:\"us-west-2_HkQwCXfW2\",aws_user_pools_web_client_id:\"1becqv2plj9fj8u3q2hure7dvu\",oauth:{},aws_appsync_graphqlEndpoint:\"https://rwsklerz4fbb5hhtmkcj5m5amq.appsync-api.us-west-2.amazonaws.com/graphql\",aws_appsync_region:\"us-west-2\",aws_appsync_authenticationType:\"AMAZON_COGNITO_USER_POOLS\",aws_content_delivery_bucket:\"amplify-notetaker-20190619235030-hostingbucket-noteenv\",aws_content_delivery_bucket_region:\"us-west-2\",aws_content_delivery_url:\"http://amplify-notetaker-20190619235030-hostingbucket-noteenv.s3-website-us-west-2.amazonaws.com\"};N.a.configure(x),i.a.render(o.a.createElement(y,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},45:function(e,t){}},[[141,1,2]]]);","extractedComments":[]}